import Head from "next/head";
import { useUser, withPageAuthRequired } from "@auth0/nextjs-auth0/client";
import axios from "axios";
import { useEffect, useState } from "react";

import styles from "../styles/eventi.module.css";
import Menu from "../components/Menu";
import ResizeButton from "../components/ResizeButton";
import VoceCalendario from "../components/VoceCalendario";

export default withPageAuthRequired(function Eventi() {
  const [calendari, setCalendari] = useState([]);
  const [eventi, setEventi] = useState({});

  const { user } = useUser();

  const fetchCalendari = () => {
    axios
      .get(`/api/calendar/${user.sub}`)
      .then((response) => {
        setCalendari(response.data.calendari);
      })
      .catch((error) => {
        console.error(error);
      });
  };

  const fetchEventi = () => {
    calendari.map((element) => {
      axios
        .get(`/api/event/${element._id}`, {
          params: {
            userId: user.sub,
          },
        })
        .then((response) => {
          let temp = { ...eventi };
          temp[element._id] = response.data.eventi;
          setEventi({ ...temp });
        })
        .catch((error) => {
          let temp = { ...eventi };
          temp[element._id] = [];
          setEventi({ ...temp });
        });
    });
  };

  useEffect(() => {
    fetchCalendari();
  }, [user]);

  useEffect(() => {
    fetchEventi();
  }, [calendari]);

  return (
    <div>
      <Head>
        <title>Eventi</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <div className={styles.home}>
        <Menu selected="Eventi" />
        <div className={styles["left-tab"]}>
          <div className={styles.flex}>
            <ResizeButton text="Crea Evento" icon="more_time" />
            <ResizeButton text="Crea Evento Ripetuto" icon="update" />
          </div>
          <ResizeButton text="Crea Calendario" icon="event_note" />
          <div className={styles.line} />
          {calendari.map((element) => {
            return (
              <VoceCalendario
                calendario={element}
                eventi={eventi[element._id]}
                key={"event" + element._id}
              />
            );
          })}
        </div>
        <div className={styles["right-tab"]}></div>
      </div>
    </div>
  );
});
